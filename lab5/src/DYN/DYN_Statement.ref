*$FROM src/DYN/DYN_Code.ref
*$FROM LibraryEx
$EXTERN DYN_Code, Map;

/**
  <DYN_Statement
      (t.Expr "=" t.Expr)
    | (call t.Expr t.Expr*)
    | (mcall t.Expr s.Name t.Expr*)
    | (return t.Expr)
    | (if t.BoolExpr e.Code)
    | (if t.BoolExpr e.Code else e.Code)
    | (while t.BoolExpr e.Code)
    | (asm s.ANY+)
    | (block t.LocalVars e.Code)
    | (init t.ObjectPtr s.Name)
    | (t.Expr ":-" t.Expr)
    | (gc-alloc t.Expr s.Name)
    | (ref-return t.Expr)
  > == t.Statement
*/
$ENTRY DYN_Statement {
  (t.ObjectPtr "=" t.Expr) = (t.ObjectPtr "=" t.Expr);
  (call t.Expr e.Args) = (call t.Expr e.Args);
  (mcall t.Object s.Method e.Args) = (mcall t.Object s.Method e.Args);
  (return t.Expr) = (return t.Expr);
  (if t.BoolExpr e.CodeT else e.CodeF)
    = (if t.BoolExpr <DYN_Code e.CodeT> else <DYN_Code e.CodeF>);
  (if t.BoolExpr e.Code) = (if t.BoolExpr <DYN_Code e.Code>);
  (while t.BoolExpr e.Code) = (while t.BoolExpr <DYN_Code e.Code>);
  (block t.LocalVars e.Code) = (block t.LocalVars <DYN_Code e.Code>);
  (init t.ObjectPtr s.Name) = (init t.ObjectPtr s.Name);
  
  /* TODO =D */
  (t.Expr ":-" t.Expr) = ((L t.Expr) "=" t.Expr);
  (gc-alloc t.Expr s.Name) = (t.Expr "=" (call allocBlock__ s.Name));
  (ref-return t.Expr) = (return (L t.Expr));
  
  e.Other = e.Other
}
