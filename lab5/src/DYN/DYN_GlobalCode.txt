(function inc__ (ptr)
    ((L ptr) "=" ((L (L ptr)) "+" 1))
)

(function dec__ (ptr)
    ((L ptr) "=" ((L (L ptr)) "-" 1))
)

(const min_block_order__ "=" 3)
(var heap_order__ 1 "=" min_block_order__)
(var heap_start__ 1)

(const block_prev__ "=" 0)
(const block_next__ "=" 1)
(const block_size__ "=" 2)
(const block_buzy__ "=" 3)

(const ref_links_count__ "=" 1)
(const ref_refs_count__ "=" 2)

(function getHeapBlock__ (size)
    (return ((L PROGRAM_SIZE) "+" ((L size) "-" min_block_order__)))
)
(function getNextBlock__ (block)
    (return (L ((L block) "+" block_next__)))
)

(function unlinkBlock__ (block)
    (var (prevBlock 1) (nextBlock 1))

    (prevBlock "=" (L ((L block) "+" block_prev__)))
    (nextBlock "=" (L ((L block) "+" block_next__)))

    (if ((L prevBlock) "<>" 0)
        (((L prevBlock) "+" block_next__) "=" (L nextBlock))
    else
        ((call getHeapBlock__ (L ((L block) "+" block_size__))) "=" (L nextBlock))
    )
    (if ((L nextBlock) "<>" 0)
        (((L nextBlock) "+" block_prev__) "=" (L prevBlock))
    )

    (((L block) "+" block_buzy__) "=" 1)
)

(function linkBlocks__ (prevBlock nextBlock)
    (if ((L prevBlock) "<>" 0)
        (((L prevBlock) "+" block_next__) "=" (L nextBlock))
    )
    (if ((L nextBlock) "<>" 0)
        (((L nextBlock) "+" block_prev__) "=" (L prevBlock))
    )
)

(function insertBlock__ (block)
    (var (listPtr 1))

    (listPtr "=" (call getHeapBlock__ (L ((L block) "+" block_size__))))

    (call linkBlocks__ (L block) (L (L listPtr)))
    (((L block) "+" block_prev__) "=" 0)
    (((L block) "+" block_buzy__) "=" 0)
    ((L listPtr) "=" (L block))
)

(function splitBlock__ (block)
    (var (blockOrder 1) (newBlock 1) (listNew 1))

    (call unlinkBlock__ (L block))

    (blockOrder "=" ((L ((L block) "+" block_size__)) "-" 1))

    (newBlock "=" ((L block) "+" (1 "<<" (L blockOrder))))
    (((L block) "+" block_size__) "=" (L blockOrder))
    (((L newBlock) "+" block_size__) "=" (L blockOrder))

    (call insertBlock__ (L newBlock))
    (call insertBlock__ (L block))
)

(function unionBlock__ (block)
    (var (buddy 1))

    (if ((L ((L block) "+" block_buzy__)) "==" 1)
        (return 0)
    )

    (if ((((L block) "-" (L heap_start__)) "&" (1 "<<" (L ((L block) "+" block_size__)))) "==" 0)
        (buddy "=" ((L block) "+" (1 "<<" (L ((L block) "+" block_size__)))))
    else
        (buddy "=" (L block))
        (block "=" ((L block) "-" (1 "<<" (L ((L block) "+" block_size__)))))
    )

    (if (((L ((L buddy) "+" block_buzy__)) "==" 1) or
        ((L ((L block) "+" block_size__)) "<>" (L ((L buddy) "+" block_size__)))
    )
        (return 0)
    )

    (call unlinkBlock__ (L block))
    (call unlinkBlock__ (L buddy))
    
    (call inc__ ((L block) "+" block_size__))
    (call insertBlock__ (L block))

    (call unionBlock__ (L block))
)

(function allocBlock__ (size)
    (var (r 1) (n 1) (block 1))

    (r "=" min_block_order__)
    (while ((L size) ">" ((1 "<<" (L r)) "-" (1 "<<" min_block_order__)))
        (call inc__ r)
    )

    (n "=" (L r))
    (while ((L (call getHeapBlock__ (L n))) "==" 0)
        (call inc__ n)
        (if ((L n) ">" (L heap_order__))
            (return 0)
        )
    )

    (while ((L n) "<>" (L r))
        (call splitBlock__ (L (call getHeapBlock__ (L n))))
        (call dec__ n)
    )

    (block "=" (L (call getHeapBlock__ (L r))))

    (call unlinkBlock__ (L block))
    (block "=" ((L block) "+" (1 "<<" min_block_order__)))
    (((L block) "-" ref_links_count__) "=" 1)
    (((L block) "-" ref_refs_count__) "=" 0)
    (return (L block))
)

(function deallocBlock__ (block)
    (block "=" ((L block) "-" (1 "<<" min_block_order__)))
    (call insertBlock__ (L block))
    (call unionBlock__ (L block))
)

(function out__ (char)
    (asm GETFP 2 ADD LOAD OUT)
)

(function printInt__ (int)
    (if ((L int) ">=" 10)
        (call printInt__ ((L int) "/" 10))
    )
    (call out__ (((L int) "%" 10) "+" 48))
)

(function newLine__ ()
    (call out__ 10)
)

(function space__ ()
    (call out__ 32)
)

(function printHeap__ ()
    (block ((i 1))
        (i "=" min_block_order__)
        (while ((L i) "<=" (L heap_order__))
            (block ((block 1) (count 1))
                (count "=" 0)
                (block "=" (L (call getHeapBlock__ (L i))))
                (while ((L block) "<>" 0)
                    (call inc__ count)
                    (block "=" (call getNextBlock__ (L block)))
                )
                (call printInt__ (L count))
                (call space__)
            )
            (call inc__ i)
        )
        (call newLine__)
    )
)

(class DynVarBase__ ()
    (method delete__ (self)
    )
)

(function refInc__ (ref)
    (if ((L ref) "<>" 0)
        (call inc__ ((L ref) "-" ref_links_count__))
    )
)

(function refDec__ (ref)
    (if ((L ref) "<>" 0)
        (call dec__ ((L ref) "-" ref_links_count__))
        (if ((L ((L ref) "-" ref_links_count__)) "==" 0)
            (block ((i 1) (refcount 1))
                (refcount "=" (L ((L ref) "-" ref_refs_count__)))
                (i "=" 0)
                (while ((L i) "<>" (L refcount))
                    (call refDec__ (L ((L ref) "+" (L i))))
                    (call inc__ i)
                )
            )
            (call deallocBlock__ (L ref))
        )
    )
)
