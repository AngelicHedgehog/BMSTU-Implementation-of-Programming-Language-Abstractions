*$FROM src/OOP/OOP_Code.ref
*$FROM LibraryEx
$EXTERN OOP_Code, Map;

/**
  <OOP_Expr
      s.Name
    | s.NUMBER
    | (L t.Expr)
    | ("-" t.Expr)
    | (t.Expr s.BinOp t.Expr)
    | (call t.Expr t.Expr*)
    | (asm s.ANY+)
    | (t.Expr "=" t.Expr)
    | (let t.LocalVars e.Code t.Expr)
    | (mcall t.Expr s.Name t.Expr*)
  > == t.Expr
*/
$ENTRY OOP_Expr {
  (L t.Expr) = (L <OOP_Expr t.Expr>);
  ("-" t.Expr) = ("-" <OOP_Expr t.Expr>);
  (t.Expr s.BinOp t.Expr) = (<OOP_Expr t.Expr> s.BinOp <OOP_Expr t.Expr>);
  (call t.Expr e.Exprs) = (call <Map OOP_Expr t.Expr e.Exprs>);
  (t.Expr "=" t.Expr) = (<OOP_Expr t.Expr> "=" <OOP_Expr t.Expr>);
  (let t.LocalVars e.Code t.Expr) = (let t.LocalVars <OOP_Code e.Code> <OOP_Expr t.Expr>);

  (mcall t.Expr s.Name e.Exprs) = 0;

  e.Other = e.Other;
}
