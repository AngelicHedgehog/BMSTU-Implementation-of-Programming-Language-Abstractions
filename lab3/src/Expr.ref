*$FROM src/Name.ref
*$FROM src/BinOp.ref
$EXTERN Name, BinOp;

/**
  <Expr
    t.Consts
    t.Locals
      s.Name
    | s.NUMBER
    | (L t.Expr)
    | ("-" t.Expr)
    | (t.Expr s.BinOp t.Expr)
    | (call t.Expr t.Expr*)
    | (asm s.ANY+)
  > == s.AsmCodeCmd*
*/
$ENTRY Expr {
  t.Consts t.Locals s.Number
    , <Type s.Number> : 'N' e._
    = s.Number;
  t.Consts t.Locals s.Name
    , <Name t.Consts s.Name> : SUCC s.Val
    = s.Val;
  t.Consts t.Locals s.Name
    , <Name t.Locals s.Name> : SUCC s.Val
    = GETFP s.Val SUB;
  t.Consts t.Locals (L t.Expr) = <Expr t.Consts t.Locals t.Expr> LOAD;
  t.Consts t.Locals ("-" t.Expr) = <Expr t.Consts t.Locals t.Expr> NEG;
  t.Consts t.Locals (call t.Expr e.Exprs)
    = <CompileArgs t.Consts t.Locals e.Exprs> <Expr t.Expr> CALL GETRV;
  t.Consts t.Locals (asm e.Code) = '\n' e.Code '\n';
  t.Consts t.Locals (t.ExprL s.BinOp t.ExprR)
    = <Expr t.Consts t.Locals t.ExprL>
      <Expr t.Consts t.Locals t.ExprR>
      <BinOp s.BinOp>;
}

CompileArgs {
  t.Consts t.Locals e.Args t.Arg
    = <Expr t.Consts t.Locals t.Arg>
      <CompileArgs t.Consts t.Locals e.Args>;
  t.Consts t.Locals = /* пусто */;
}
